<htm>
	<lo-go></lo-go>

	<input type='text' id='search' placeholder='search...' on-input='search' />

	<h3>Infectiology</h3>
	<div id='infectio'></div>


	<h3>Clinical Chemistry</h3>
	<div id='lab'></div>


	<h3>Anatomy</h3>
	<div id='anatomy'></div>
	<!-- <a href='#anatomy/bones'>Bones</a>
	<a href='#anatomy/directions'>directions</a>
	<a href='#anatomy/organs'>organs</a> -->

	<footer>
		<a href='https://github.com/OpenTerm' target='blank'>edit on GitHub</a>
	</footer>
</htm>

<style>
	@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300&display=swap');

	/* @import url('https://fonts.googleapis.com/css2?family=Inconsolata:wght@300&display=swap'); */
	:host {
		display: block;
		color: white;
		padding: .5rem;
		box-sizing: border-box;
		font-weight: 300;
		font-size: 1.1rem;
	}

	* {
		font-family: Quicksand;
	}

	h3 {
		color: #ccf;
		margin-bottom: 0;
		font-weight: 300;
	}

	a {
		text-decoration: none;
		color: white;
		display: block;
		font-weight: 300;
	}

	a:hover {
		color: #ccf;
	}

	input {
		background: #444;
		color: #ddf;
		border: none;
		outline: none;
		font-size: 1.2rem;
		width: 100%;
	}

	.loading {
		color: gray;
	}
	footer{
		position: absolute;
		bottom:.5rem;
	}
</style>

<script>
	import './lo-go.tag.js';
	import data from '../data.js';

	class {
		$onLoad(){

		}
		$onReady() {
			for (let base in data.sources) {
				for (let item in data.sources[base]) {
					console.log('show', base,item,this.$q1('#' + base))
					this.$q1('#' + base).innerHTML += `<a class='loading' href='#${base}/${item}'>${data.sources[base][item]}</a>`
				}
				// console.log('base', base)
			}
			window.addEventListener('loaded',e=>{
				// console.log('e',e);
				this.activate(e.detail.base, e.detail.item)
			})
			window.addEventListener('hashchange',e=>{
				this.updateEditLink();
			})
		}
		updateEditLink(){
			let path = document.location.hash.substr(1).split('/')
			this.$q1('footer a').setAttribute('href',data.editLink(path[0],path[1]))
		}
		activate(base,item){
			console.log('activate',base,item,`a[href='#${base}/${item}']`);
			this.$q1(`a[href='#${base}/${item}']`)?.classList?.remove('loading')
		}
		search(node) {
			console.log('search', node)
			this.$event('search', { terms: node.value })
		}
	}
</script>